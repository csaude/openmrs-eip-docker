########################################################################################################################
#                                                                                                                      #
# This file provides a template for core configuration properties for the DB sync sender application, it contains      #
# in-line documentation for each property. For the spring core properties, please refer to the spring boot docs for    #
# more details.                                                                                                        #
#                                                                                                                      #
# NOTE: For the properties that have preset values, it's recommended not to change them unless you have to, some of    #
# them have placeholders of the form ${my.other.prop.key}, it means all you need to do is set values for the property  #
# key in this file named my.other.prop.key                                                                             #
#                                                                                                                      #
########################################################################################################################


# *********************** General EIP sender properties ****************************************************************
#
eip.home=/home/eip

camel.springboot.main-run-controller=true

# The unique identifier assigned to the OpenMRS instance associated to this application
# This should be obtained from the receiving instance
#db-sync.senderId=${db_sync_senderId}
db-sync.senderId=${db_sync_senderId}

# When batch mode is enabled for sending sync messages to activemq, this value specifies the maximum number of messages
# to be sent in a single batch, defaults to 200.
jms.send.batch.size=200

# Specifies the outbound message size threshold after which the message will be compressed before sending to the
# message broker, if the compressed message is still larger than this size, the message will be sent in stream mode.
# Defaults to 45KiB. If you wish to set this to some other value, it is recommended to be half the configured large
# message size value in artemisMQ, this is because artemis uses 2 bytes per message character which makes the actual
# message size in artemis to be double that of the original sent message.
jms.large.msg.size=45

# The interval in milliseconds before the first poll of the debezium event queue by the debezium reader route when the
# application starts.
debezium-event-reader.initial.delay=60000

# The interval in milliseconds between polls of the debezium event queue by the debezium reader route
debezium-event-reader.repeat.interval=30000

# The interval in milliseconds between polls of the retry queue by the retry route
db-event.retry.interval=1800000

# The interval in milliseconds before the first poll of the retry queue by the retry route when the application starts.
db-event.retry.initial.delay=120000

# Number of threads to use to sync items in parallel, defaults to the number of available CPU cores
#parallel.processing.thread.number=

# The interval in milliseconds before the first poll of the sender sync message queue when the application starts.
sender-sync-msg-reader.initial.delay=120000

# The interval in milliseconds between polls of the retry queue by the  sender sync message reader route
sender-sync-msg-reader.delay=60000

# The interval in milliseconds before the first poll of the response queue by the reader route when the application starts.
sync-response-reader.initial.delay=120000

# The interval in milliseconds between sender sync responses fetches by the sync response reader route.
sync-response-reader.delay=60000
# ----------------------------------------------------------------------------------------------------------------------


# *********************************************** Sync Reconciliation **************************************************

# The interval in milliseconds before the first poll of the sender reconcile queue after startup, defaults to 5 seconds.
# It is the task that processes the entire reconciliation iteration.
#reconcile.initial.delay=

# The interval in milliseconds between polls of the sender reconcile queue, defaults to 5 minutes.
#reconcile.delay=

# The interval in milliseconds before the first poll of the table reconcile message queue task after startup, defaults
# to 5 seconds.
#reconcile.table.initial.delay=

# The interval in milliseconds between polls of the table reconcile message queue, defaults to 5 minutes.
#reconcile.table.delay=
# ----------------------------------------------------------------------------------------------------------------------


# ========================================= Sync Archives Pruning ======================================================

# Enables or disables the sync archives pruner task, defaults to false
archives.pruner.task.enabled=true

# Specifies the maximum age in days after which old receiver sync archives will be pruned
archives.pruner.max.age.days=30

# The interval in milliseconds before the first poll of the sync archive queue by the pruner task after startup,
# defaults to 60 seconds.
#archives.pruner.initial.delay=

# The interval in milliseconds between polls of the sync archive queue by the pruner tasks, defaults to 1 day
#archives.pruner.delay=

# ----------------------------------------------------------------------------------------------------------------------


# *********************** Logging Configuration ************************************************************************
#
# Uncomment this to use console logging otherwise defaults to the logback.xml file located on the classpath which is
# configured to log to ${eip.home}/logs/openmrs-eip.log
logging.config=file:logback-spring.xml

# Logging level for the application loggers (all built-in routes and classes)
openmrs.eip.log.level=INFO

# Logging level for ONLY application class loggers, feel free to add more logger configurations
logging.level.org.openmrs.eip=${openmrs.eip.log.level}
logging.level.out-bound-logger=${openmrs.eip.log.level}
logging.level.outbound-error-handler=${openmrs.eip.log.level}
logging.level.db-event-processor=${openmrs.eip.log.level}
logging.level.out-bound-db-sync=${openmrs.eip.log.level}
logging.level.debezium=${openmrs.eip.log.level}
logging.level.sender-retry=${openmrs.eip.log.level}
logging.level.debezium-event-reader=${openmrs.eip.log.level}
logging.level.debezium-event-processor=${openmrs.eip.log.level}
logging.level.sender-request-processor=${openmrs.eip.log.level}
logging.level.sender-activemq-consumer=${openmrs.eip.log.level}
logging.level.sender-activemq-publisher=${openmrs.eip.log.level}
logging.level.sync-response-processor=${openmrs.eip.log.level}
logging.level.sender-sync-msg-reader=${openmrs.eip.log.level}
logging.level.sync-response-reader=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Tomcat Configuration *************************************************************************
#
# Server HTTP port, the H2 database console is exposed at this port
server.port=${server_port}
# ----------------------------------------------------------------------------------------------------------------------

# *********************** Sender camel routes location *****************************************************************
#
# Location of the Camel routes xml files
camel.springboot.routes-include-pattern=file:${eip.home}${file.separator}routes${file.separator}*
# ----------------------------------------------------------------------------------------------------------------------

# *********************** Configuration of the openMRS database to read from *******************************************
#
# The IP address or host name of the OpenMRS MySQL database
#openmrs.db.host=${openmrs_db_host}
openmrs.db.host=${openmrs_db_host}

# The OpenMRS MySQL database port
openmrs.db.port=${openmrs_db_port}

# The OpenMRS MySQL database name
openmrs.db.name=${openmrs_db_name}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Datasource config ********************************************************************
#
# Driver class of the openMRS datasource
spring.openmrs-datasource.driverClassName=com.mysql.cj.jdbc.Driver
#com.mysql.jdbc.Driver

# Dialect of the openMRS datasource (should not be changed in a usual use)
spring.openmrs-datasource.dialect=org.hibernate.dialect.MySQLDialect

# Url of the openMRS datasource, you don't have to change this value as long you've set the placeholder property values
spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}

# User name of the openMRS datasource
spring.openmrs-datasource.username=root

# Password of the openMRS datasource
spring.openmrs-datasource.password=${spring_openmrs_datasource_password}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the Management database *****************************************************
#
# Driver class of the management datasource (should not be changed in a usual use)
#spring.mngt-datasource.driverClassName=org.h2.Driver
spring.mngt-datasource.driverClassName=com.mysql.cj.jdbc.Driver

# Dialect of the management datasource (should not be changed in a usual use)
#spring.mngt-datasource.dialect=org.hibernate.dialect.H2Dialect
spring.mngt-datasource.dialect=org.hibernate.dialect.MySQLDialect

# Url of the management datasource
#spring.mngt-datasource.jdbcUrl=jdbc:h2:file:${eip.home}/db/sender/openmrs_eip_mgt
#spring.mngt-datasource.jdbcUrl=jdbc:mysql://localhost:3307/openmrs_eip_mgt?autoReconnect=true&useSSL=false
spring.mngt-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/openmrs_eip_sender_mgt_${db-sync.senderId}?createDatabaseIfNotExist=true

# User name of the management datasource
spring.mngt-datasource.username=root

# Password of the management datasource
spring.mngt-datasource.password=${spring_openmrs_datasource_password}

# ----------------------------------------------------------------------------------------------------------------------


# *********************** Debezium Config ******************************************************************************
#
# For details explanations of these properties, please refer to
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-connector-properties
#
# Maps to the connector property named database.server.id, MUST match the server-id value in your my.cnf file when you
# enabled mysql binlog, DO NOT change after setting it
debezium.db.serverId=1000

# Unique logical name of the MySQL database server, maps to the debezium MySQL connector property named
# database.server.name, DO NOT change after setting it
debezium.db.serverName=${openmrs.db.host}

# Database username for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.user, it's highly recommended to create separate user account as described at
# https://debezium.io/documentation/reference/connectors/mysql.html#setting-up-mysql
debezium.db.user=root

# Database password for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.password
debezium.db.password=${spring_openmrs_datasource_password}

# Specifies the criteria for running a snapshot when the connector starts, DO NOT change after setting it, maps to the
# debezium MySQL connector property named snapshot.mode
debezium.snapshotMode=schema_only

# Maximum size of each batch of source records to be read by debezium from the binlog files, maps to the
## debezium MySQL connector property named max.batch.size
#https://debezium.io/documentation/reference/1.6/connectors/mysql.html#mysql-property-max-batch-size
debezium.reader.maxBatchSize=2048

# The 2 properties below are debezium engine specific and are documented at
# https://debezium.io/documentation/reference/development/engine.html#engine-properties
#
# Path to file where offsets are to be stored, maps to property named offset.storage.file.filename, DO NOT change after
# setting it
debezium.offsetFilename=${eip.home}${file.separator}shared${file.separator}.debezium${file.separator}offsets.txt

# Path to file where offsets are to be stored, maps to property named database.history.file.filename, DO NOT change
# after setting it
debezium.historyFilename=${eip.home}${file.separator}shared${file.separator}.debezium${file.separator}dbhistory.txt
# ----------------------------------------------------------------------------------------------------------------------

# *********************** Binary Log Purge Configuration ***************************************************************
#
# When set to true, the binary log purging feature is enabled otherwise it is disabled, defaults to false.
binlog.purger.task.enabled=true

# The maximum number of processed binary log files to keep, the rest are deleted, defaults to 100.
binlog.files.processed.keep.max=30

# The interval in milliseconds before the first attempt to purge binary log files when the application starts, defaults
# to 1 minute.
#binlog.purger.initial.delay=1800

# The interval in milliseconds between attempts to purge processed binary log files, defaults to 1 day.
#binlog.purger.delay=
# ----------------------------------------------------------------------------------------------------------------------



# *********************** ActiveMQ configuration ***********************************************************************
#
# IP address or host name of the Artemis MQ broker shared with the receiver
#spring.artemis.host=197.242.174.114
spring.artemis.host=${spring_artemis_host}
#
# Artemis broker port
#spring.artemis.port=8092
spring.artemis.port=${spring_artemis_port}
#spring.artemis.port=61616
#
# User name of the Artemis broker
spring.artemis.user=${spring_artemis_user}
#
# Password of the Artemis broker
spring.artemis.password=${spring_artemis_password}

# Enable SSL for MQ transport layer  
artemis.ssl.enabled=${artemis_ssl_enabled}

# The maximum wait in milliseconds between reconnection attempts to activeMQ, defaults to 30 minutes
max.reconnect.delay=900000

activemq.clientId=${db-sync.senderId}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the ArtemisMQ endpoint to send out bound DB sync events *********************
#
# Use either one of the following confs. JMS endpoint if ArtemisMQ is configured or file endpoint, note that file
# endpoint is ONLY for TESTING purposes
# Camel JMS Endpoint e.g. activemq:topic:<topic-name> or FILE Endpoint e.g. file:<folderPath> Should be absolute path
camel.output.endpoint=activemq:openmrs.dbsync

# ----------------------------------------------------------------------------------------------------------------------


# ************************************* NOTIFICATION APP CONFIG *****************************************************
notification.content.root.folder=${eip.home}${file.separator}notifications
camel.springboot.main-run-controller=true
artemis.dbsync.notifications.endpoint=activemq:dbsync.notifications
# ----------------------------------------------------------------------------------------------------------------------


# *****************************  SMPT Configurations  ******************************************#
#
#The sender email
smtp.auth.user=${dbsync_notification_email_smtp_auth_user}

#The sender auth pass
smtp.auth.pass=${dbsync_notification_email_smtp_user_pass}
#
#The SMTP host name
smtp.host.name=${dbsync_notification_email_smtp_host_name}
#
#The SMTP host port
smtp.host.port=${dbsync_notification_email_smtp_host_port}
#-----------------------------------------------------------------------------------------------------------------------


################################################################## CENTRALIZATION FEATURES DATASOURCE ########################################################
spring.datasource.centralization.features.url=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/centralization_features_mgt_db?createDatabaseIfNotExist=true
spring.datasource.centralization.features.username=root
spring.datasource.centralization.features.password=${spring_openmrs_datasource_password}
spring.mngt-datasource.centralization.features.driver-class-name=com.mysql.cj.jdbc.Driver
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#************************************************* NOTIFICATION MANAGER CONFIGURATION *******************************************************************************************************************************
artemis.dbsync.notifications.endpoint=activemq:dbsync.notifications?connectionFactory=activeMqConnFactory&acknowledgementModeName=CLIENT_ACKNOWLEDGE&messageListenerContainerFactory=customMessageListenerContainerFactory

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



##******************************************************* UPDATES MANAGER PROPS *********************************************************************
## Remote site
artemis.dbsync.updates.endpoint=activemq:topic:db_sync_updates?subscriptionDurable=true&durableSubscriptionName=db_sync_updates_${db-sync.senderId}&connectionFactory=activeMqConnFactory&acknowledgementModeName=CLIENT_ACKNOWLEDGE&messageListenerContainerFactory=customMessageListenerContainerFactory
artemis.dbsync.update.response.endpoint=activemq:db_sync_update_response
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


##******************************************************* REMOTE DATA SHARE MANAGER PROPS *********************************************************************
remote.data.share.endpoint=activemq:topic:remote_data_share
remote.data.share.request.endpoint=activemq:topic:remote_data_share_request?subscriptionDurable=true&durableSubscriptionName=remote_data_share_request_${db_sync_senderId}&connectionFactory=activeMqConnFactory&acknowledgementModeName=CLIENT_ACKNOWLEDGE&messageListenerContainerFactory=customMessageListenerContainerFactory
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
